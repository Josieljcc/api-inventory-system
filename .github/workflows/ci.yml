name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"
      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.55.2
      - name: Lint
        run: golangci-lint run --timeout=5m

  test-unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"
      - name: Test (unit, with mocks)
        run: go test -short -v -coverprofile=coverage.out ./...
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.out
        continue-on-error: true

  test-integration:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: inventory
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U user -d inventory" --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      DB_URL: postgres://user:password@localhost:5432/inventory?sslmode=disable
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"
      - name: Wait for Postgres
        run: |
          for i in {1..10}; do
            pg_isready -h localhost -U user -d inventory && break
            sleep 3
          done
      - name: Test (integration)
        run: go test -v ./internal/products ./internal/users
